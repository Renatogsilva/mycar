-- Criação da tabela tb_car, se não existir
CREATE TABLE IF NOT EXISTS tb_car (
                                      creation_date date,
                                      exclusion_date date,
                                      year_manufacture integer not null,
                                      car_id bigint generated by default as identity,
                                      fk_user_creation_id bigint not null unique,
                                      fk_user_exclusion_id bigint unique,
                                      engine varchar(20) not null,
    version varchar(20) not null,
    body_style varchar(50) not null,
    color varchar(50) not null,
    mark varchar(100) not null,
    exchange varchar(255) not null check (exchange in ('MANUAL','AUTOMATIC')),
    status varchar(255) not null check (status in ('ACTIVE','INACTIVE','DELETED')),
    primary key (car_id)
    );

-- Criação da tabela tb_person, se não existir
CREATE TABLE IF NOT EXISTS tb_person (
                                         birth_date date not null,
                                         person_id bigint generated by default as identity,
                                         cpf varchar(14) not null unique,
    sex varchar(20) not null check (sex in ('MALE','FEMALE')),
    email varchar(255) not null unique,
    first_name varchar(255) not null,
    last_name varchar(255) not null,
    primary key (person_id)
    );

-- Criação da tabela tb_phone, se não existir
CREATE TABLE IF NOT EXISTS tb_phone (
                                        is_main boolean,
                                        person_id bigint not null,
                                        phone_id bigint generated by default as identity,
                                        number varchar(14) not null,
    type_phone varchar(20) not null check (type_phone in ('FIXED','RESIDENTIAL','CELL_PHONE','COMMERCIAL')),
    primary key (phone_id)
    );

-- Criação da tabela tb_user, se não existir
CREATE TABLE IF NOT EXISTS tb_user (
                                       creation_date date not null,
                                       is_primary_access boolean not null,
                                       fk_person_id bigint not null unique,
                                       user_id bigint generated by default as identity,
                                       status varchar(20) not null check (status in ('ACTIVE','INACTIVE','DELETED')),
    type_user varchar(20) not null check (type_user in ('ADMIN','USER','NOT_PERMISION')),
    password varchar(255) not null,
    username varchar(255) not null,
    primary key (user_id)
    );

-- Adicionando a constraint de chave estrangeira fk_car_user_creation (apenas se não existir)
DO $$
BEGIN
    -- Verifica se a constraint fk_car_user_creation já existe antes de adicioná-la
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'fk_car_user_creation') THEN
ALTER TABLE tb_car
    ADD CONSTRAINT fk_car_user_creation
        FOREIGN KEY (fk_user_creation_id) REFERENCES tb_user;
END IF;
END $$;

-- Adicionando a constraint de chave estrangeira fk_car_user_exclusion (apenas se não existir)
DO $$
BEGIN
    -- Verifica se a constraint fk_car_user_exclusion já existe antes de adicioná-la
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'fk_car_user_exclusion') THEN
ALTER TABLE tb_car
    ADD CONSTRAINT fk_car_user_exclusion
        FOREIGN KEY (fk_user_exclusion_id) REFERENCES tb_user;
END IF;
END $$;

-- Adicionando a constraint de chave estrangeira fk_phone_person (apenas se não existir)
DO $$
BEGIN
    -- Verifica se a constraint fk_phone_person já existe antes de adicioná-la
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'fk_phone_person') THEN
ALTER TABLE tb_phone
    ADD CONSTRAINT fk_phone_person
        FOREIGN KEY (person_id) REFERENCES tb_person;
END IF;
END $$;

-- Adicionando a constraint de chave estrangeira fk_user_person (apenas se não existir)
DO $$
BEGIN
    -- Verifica se a constraint fk_user_person já existe antes de adicioná-la
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'fk_user_person') THEN
ALTER TABLE tb_user
    ADD CONSTRAINT fk_user_person
        FOREIGN KEY (fk_person_id) REFERENCES tb_person;
END IF;
END $$;